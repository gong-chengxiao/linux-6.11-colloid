<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>_perf_event_enable (256 samples, 55.77%)</title><rect x="477.9" y="229" width="658.1" height="15.0" fill="rgb(208,19,1)" rx="2" ry="2" />
<text  x="480.89" y="239.5" >_perf_event_enable</text>
</g>
<g >
<title>cap_task_setscheduler (1 samples, 0.22%)</title><rect x="459.9" y="261" width="2.6" height="15.0" fill="rgb(237,110,43)" rx="2" ry="2" />
<text  x="462.89" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="1136.0" y="357" width="2.6" height="15.0" fill="rgb(232,133,53)" rx="2" ry="2" />
<text  x="1139.01" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (260 samples, 56.64%)</title><rect x="467.6" y="357" width="668.4" height="15.0" fill="rgb(239,225,3)" rx="2" ry="2" />
<text  x="470.60" y="367.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>__mod_lruvec_page_state (12 samples, 2.61%)</title><rect x="74.3" y="245" width="30.8" height="15.0" fill="rgb(207,200,41)" rx="2" ry="2" />
<text  x="77.27" y="255.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (54 samples, 11.76%)</title><rect x="326.2" y="325" width="138.8" height="15.0" fill="rgb(210,57,10)" rx="2" ry="2" />
<text  x="329.21" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>__schedule (2 samples, 0.44%)</title><rect x="308.2" y="405" width="5.2" height="15.0" fill="rgb(223,190,12)" rx="2" ry="2" />
<text  x="311.21" y="415.5" ></text>
</g>
<g >
<title>do_exit (112 samples, 24.40%)</title><rect x="10.0" y="357" width="287.9" height="15.0" fill="rgb(225,150,1)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >do_exit</text>
</g>
<g >
<title>__x64_sys_ioctl (259 samples, 56.43%)</title><rect x="470.2" y="293" width="665.8" height="15.0" fill="rgb(226,102,46)" rx="2" ry="2" />
<text  x="473.17" y="303.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>cpu_stop_queue_work (19 samples, 4.14%)</title><rect x="369.9" y="197" width="48.9" height="15.0" fill="rgb(227,112,34)" rx="2" ry="2" />
<text  x="372.91" y="207.5" >cpu_..</text>
</g>
<g >
<title>worker_thread (1 samples, 0.22%)</title><rect x="300.5" y="437" width="2.6" height="15.0" fill="rgb(238,116,20)" rx="2" ry="2" />
<text  x="303.50" y="447.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (23 samples, 5.01%)</title><rect x="225.9" y="181" width="59.2" height="15.0" fill="rgb(224,209,26)" rx="2" ry="2" />
<text  x="228.95" y="191.5" >free_p..</text>
</g>
<g >
<title>copy_user_short_string (1 samples, 0.22%)</title><rect x="349.3" y="277" width="2.6" height="15.0" fill="rgb(221,6,29)" rx="2" ry="2" />
<text  x="352.35" y="287.5" ></text>
</g>
<g >
<title>ixgbe_identify_sfp_module_generic (1 samples, 0.22%)</title><rect x="313.4" y="373" width="2.5" height="15.0" fill="rgb(251,124,48)" rx="2" ry="2" />
<text  x="316.36" y="383.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.22%)</title><rect x="1141.2" y="341" width="2.5" height="15.0" fill="rgb(221,40,32)" rx="2" ry="2" />
<text  x="1144.15" y="351.5" ></text>
</g>
<g >
<title>migration/11 (1 samples, 0.22%)</title><rect x="315.9" y="485" width="2.6" height="15.0" fill="rgb(250,55,42)" rx="2" ry="2" />
<text  x="318.93" y="495.5" ></text>
</g>
<g >
<title>perf_ioctl (256 samples, 55.77%)</title><rect x="477.9" y="277" width="658.1" height="15.0" fill="rgb(229,55,37)" rx="2" ry="2" />
<text  x="480.89" y="287.5" >perf_ioctl</text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="1141.2" y="437" width="2.5" height="15.0" fill="rgb(239,134,32)" rx="2" ry="2" />
<text  x="1144.15" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.44%)</title><rect x="308.2" y="469" width="5.2" height="15.0" fill="rgb(211,167,15)" rx="2" ry="2" />
<text  x="311.21" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_stop (5 samples, 1.09%)</title><rect x="395.6" y="133" width="12.9" height="15.0" fill="rgb(217,185,19)" rx="2" ry="2" />
<text  x="398.62" y="143.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.65%)</title><rect x="84.6" y="213" width="7.7" height="15.0" fill="rgb(253,220,35)" rx="2" ry="2" />
<text  x="87.55" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (1 samples, 0.22%)</title><rect x="285.1" y="197" width="2.5" height="15.0" fill="rgb(253,193,6)" rx="2" ry="2" />
<text  x="288.08" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.22%)</title><rect x="359.6" y="181" width="2.6" height="15.0" fill="rgb(242,62,39)" rx="2" ry="2" />
<text  x="362.63" y="191.5" ></text>
</g>
<g >
<title>PageHeadHuge (1 samples, 0.22%)</title><rect x="303.1" y="245" width="2.5" height="15.0" fill="rgb(245,111,43)" rx="2" ry="2" />
<text  x="306.07" y="255.5" ></text>
</g>
<g >
<title>drm_fb_helper_damage_work (1 samples, 0.22%)</title><rect x="303.1" y="405" width="2.5" height="15.0" fill="rgb(208,30,47)" rx="2" ry="2" />
<text  x="306.07" y="415.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.22%)</title><rect x="321.1" y="405" width="2.5" height="15.0" fill="rgb(211,96,7)" rx="2" ry="2" />
<text  x="324.07" y="415.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (1 samples, 0.22%)</title><rect x="462.5" y="309" width="2.5" height="15.0" fill="rgb(228,100,10)" rx="2" ry="2" />
<text  x="465.46" y="319.5" ></text>
</g>
<g >
<title>enqueue_task_fair (3 samples, 0.65%)</title><rect x="354.5" y="213" width="7.7" height="15.0" fill="rgb(254,66,31)" rx="2" ry="2" />
<text  x="357.49" y="223.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.44%)</title><rect x="470.2" y="261" width="5.1" height="15.0" fill="rgb(238,98,43)" rx="2" ry="2" />
<text  x="473.17" y="271.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (2 samples, 0.44%)</title><rect x="364.8" y="213" width="5.1" height="15.0" fill="rgb(244,11,53)" rx="2" ry="2" />
<text  x="367.77" y="223.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.22%)</title><rect x="1141.2" y="357" width="2.5" height="15.0" fill="rgb(232,107,50)" rx="2" ry="2" />
<text  x="1144.15" y="367.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.22%)</title><rect x="321.1" y="421" width="2.5" height="15.0" fill="rgb(214,39,25)" rx="2" ry="2" />
<text  x="324.07" y="431.5" ></text>
</g>
<g >
<title>kworker/u128:0- (1 samples, 0.22%)</title><rect x="313.4" y="485" width="2.5" height="15.0" fill="rgb(249,197,26)" rx="2" ry="2" />
<text  x="316.36" y="495.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.22%)</title><rect x="313.4" y="437" width="2.5" height="15.0" fill="rgb(234,208,46)" rx="2" ry="2" />
<text  x="316.36" y="447.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.22%)</title><rect x="210.5" y="197" width="2.6" height="15.0" fill="rgb(220,213,38)" rx="2" ry="2" />
<text  x="213.52" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.22%)</title><rect x="1151.4" y="421" width="2.6" height="15.0" fill="rgb(207,79,30)" rx="2" ry="2" />
<text  x="1154.44" y="431.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (2 samples, 0.44%)</title><rect x="326.2" y="261" width="5.2" height="15.0" fill="rgb(242,54,13)" rx="2" ry="2" />
<text  x="329.21" y="271.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.22%)</title><rect x="305.6" y="389" width="2.6" height="15.0" fill="rgb(223,10,40)" rx="2" ry="2" />
<text  x="308.64" y="399.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (1 samples, 0.22%)</title><rect x="444.5" y="245" width="2.5" height="15.0" fill="rgb(216,30,49)" rx="2" ry="2" />
<text  x="447.47" y="255.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.22%)</title><rect x="315.9" y="421" width="2.6" height="15.0" fill="rgb(225,114,24)" rx="2" ry="2" />
<text  x="318.93" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.22%)</title><rect x="1187.4" y="405" width="2.6" height="15.0" fill="rgb(241,77,53)" rx="2" ry="2" />
<text  x="1190.43" y="415.5" ></text>
</g>
<g >
<title>thread_group_cputime_adjusted (1 samples, 0.22%)</title><rect x="1146.3" y="293" width="2.6" height="15.0" fill="rgb(234,198,23)" rx="2" ry="2" />
<text  x="1149.30" y="303.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (1 samples, 0.22%)</title><rect x="1136.0" y="373" width="2.6" height="15.0" fill="rgb(234,101,3)" rx="2" ry="2" />
<text  x="1139.01" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="315.9" y="469" width="2.6" height="15.0" fill="rgb(240,148,20)" rx="2" ry="2" />
<text  x="318.93" y="479.5" ></text>
</g>
<g >
<title>redis-server (6 samples, 1.31%)</title><rect x="1138.6" y="485" width="15.4" height="15.0" fill="rgb(239,68,12)" rx="2" ry="2" />
<text  x="1141.58" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1141.2" y="421" width="2.5" height="15.0" fill="rgb(235,84,38)" rx="2" ry="2" />
<text  x="1144.15" y="431.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.22%)</title><rect x="310.8" y="341" width="2.6" height="15.0" fill="rgb(249,114,42)" rx="2" ry="2" />
<text  x="313.78" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (256 samples, 55.77%)</title><rect x="477.9" y="37" width="658.1" height="15.0" fill="rgb(243,12,46)" rx="2" ry="2" />
<text  x="480.89" y="47.5" >native_write_msr</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.22%)</title><rect x="1159.2" y="197" width="2.5" height="15.0" fill="rgb(236,45,6)" rx="2" ry="2" />
<text  x="1162.15" y="207.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (2 samples, 0.44%)</title><rect x="1182.3" y="405" width="5.1" height="15.0" fill="rgb(253,225,10)" rx="2" ry="2" />
<text  x="1185.29" y="415.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.22%)</title><rect x="318.5" y="373" width="2.6" height="15.0" fill="rgb(216,100,34)" rx="2" ry="2" />
<text  x="321.50" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.44%)</title><rect x="1156.6" y="357" width="5.1" height="15.0" fill="rgb(230,150,45)" rx="2" ry="2" />
<text  x="1159.58" y="367.5" ></text>
</g>
<g >
<title>drm_gem_vmap_unlocked (1 samples, 0.22%)</title><rect x="303.1" y="357" width="2.5" height="15.0" fill="rgb(217,172,1)" rx="2" ry="2" />
<text  x="306.07" y="367.5" ></text>
</g>
<g >
<title>drm_gem_get_pages (1 samples, 0.22%)</title><rect x="303.1" y="261" width="2.5" height="15.0" fill="rgb(242,53,9)" rx="2" ry="2" />
<text  x="306.07" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.44%)</title><rect x="1156.6" y="293" width="5.1" height="15.0" fill="rgb(222,196,14)" rx="2" ry="2" />
<text  x="1159.58" y="303.5" ></text>
</g>
<g >
<title>ixgbe_service_task (1 samples, 0.22%)</title><rect x="313.4" y="405" width="2.5" height="15.0" fill="rgb(249,102,28)" rx="2" ry="2" />
<text  x="316.36" y="415.5" ></text>
</g>
<g >
<title>__init_swait_queue_head (1 samples, 0.22%)</title><rect x="362.2" y="229" width="2.6" height="15.0" fill="rgb(212,94,44)" rx="2" ry="2" />
<text  x="365.20" y="239.5" ></text>
</g>
<g >
<title>remote_function (256 samples, 55.77%)</title><rect x="477.9" y="165" width="658.1" height="15.0" fill="rgb(228,172,18)" rx="2" ry="2" />
<text  x="480.89" y="175.5" >remote_function</text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.44%)</title><rect x="431.6" y="229" width="5.2" height="15.0" fill="rgb(242,154,21)" rx="2" ry="2" />
<text  x="434.61" y="239.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.22%)</title><rect x="321.1" y="341" width="2.5" height="15.0" fill="rgb(240,17,33)" rx="2" ry="2" />
<text  x="324.07" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.87%)</title><rect x="82.0" y="229" width="10.3" height="15.0" fill="rgb(225,156,12)" rx="2" ry="2" />
<text  x="84.98" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.22%)</title><rect x="308.2" y="325" width="2.6" height="15.0" fill="rgb(231,119,11)" rx="2" ry="2" />
<text  x="311.21" y="335.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.22%)</title><rect x="308.2" y="357" width="2.6" height="15.0" fill="rgb(229,193,24)" rx="2" ry="2" />
<text  x="311.21" y="367.5" ></text>
</g>
<g >
<title>start_secondary (13 samples, 2.83%)</title><rect x="1156.6" y="453" width="33.4" height="15.0" fill="rgb(232,115,49)" rx="2" ry="2" />
<text  x="1159.58" y="463.5" >st..</text>
</g>
<g >
<title>exit_mmap (112 samples, 24.40%)</title><rect x="10.0" y="325" width="287.9" height="15.0" fill="rgb(209,84,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >exit_mmap</text>
</g>
<g >
<title>do_sys_open (1 samples, 0.22%)</title><rect x="1141.2" y="389" width="2.5" height="15.0" fill="rgb(215,60,40)" rx="2" ry="2" />
<text  x="1144.15" y="399.5" ></text>
</g>
<g >
<title>__kmalloc_node (2 samples, 0.44%)</title><rect x="326.2" y="277" width="5.2" height="15.0" fill="rgb(219,121,52)" rx="2" ry="2" />
<text  x="329.21" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_commit (28 samples, 6.10%)</title><rect x="213.1" y="197" width="72.0" height="15.0" fill="rgb(209,44,45)" rx="2" ry="2" />
<text  x="216.09" y="207.5" >free_unr..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="303.1" y="469" width="2.5" height="15.0" fill="rgb(243,63,47)" rx="2" ry="2" />
<text  x="306.07" y="479.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.22%)</title><rect x="315.9" y="373" width="2.6" height="15.0" fill="rgb(244,21,35)" rx="2" ry="2" />
<text  x="318.93" y="383.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.22%)</title><rect x="300.5" y="357" width="2.6" height="15.0" fill="rgb(252,108,28)" rx="2" ry="2" />
<text  x="303.50" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (112 samples, 24.40%)</title><rect x="10.0" y="421" width="287.9" height="15.0" fill="rgb(248,145,45)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >exit_to_user_mode_prepare</text>
</g>
<g >
<title>run_builtin (317 samples, 69.06%)</title><rect x="323.6" y="437" width="815.0" height="15.0" fill="rgb(233,226,1)" rx="2" ry="2" />
<text  x="326.64" y="447.5" >run_builtin</text>
</g>
<g >
<title>check_same_owner (5 samples, 1.09%)</title><rect x="447.0" y="277" width="12.9" height="15.0" fill="rgb(236,77,14)" rx="2" ry="2" />
<text  x="450.04" y="287.5" ></text>
</g>
<g >
<title>put_prev_task_idle (1 samples, 0.22%)</title><rect x="1187.4" y="373" width="2.6" height="15.0" fill="rgb(243,58,0)" rx="2" ry="2" />
<text  x="1190.43" y="383.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.44%)</title><rect x="426.5" y="197" width="5.1" height="15.0" fill="rgb(216,189,53)" rx="2" ry="2" />
<text  x="429.47" y="207.5" ></text>
</g>
<g >
<title>ixgbe_identify_module_generic (1 samples, 0.22%)</title><rect x="313.4" y="389" width="2.5" height="15.0" fill="rgb(242,72,3)" rx="2" ry="2" />
<text  x="316.36" y="399.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.22%)</title><rect x="429.0" y="165" width="2.6" height="15.0" fill="rgb(243,188,36)" rx="2" ry="2" />
<text  x="432.04" y="175.5" ></text>
</g>
<g >
<title>ixgbe_raise_i2c_clk (1 samples, 0.22%)</title><rect x="313.4" y="293" width="2.5" height="15.0" fill="rgb(234,131,34)" rx="2" ry="2" />
<text  x="316.36" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="318.5" y="469" width="2.6" height="15.0" fill="rgb(209,126,36)" rx="2" ry="2" />
<text  x="321.50" y="479.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.44%)</title><rect x="308.2" y="437" width="5.2" height="15.0" fill="rgb(237,96,1)" rx="2" ry="2" />
<text  x="311.21" y="447.5" ></text>
</g>
<g >
<title>wake_q_add (3 samples, 0.65%)</title><rect x="418.8" y="197" width="7.7" height="15.0" fill="rgb(252,203,30)" rx="2" ry="2" />
<text  x="421.76" y="207.5" ></text>
</g>
<g >
<title>release_pages (67 samples, 14.60%)</title><rect x="123.1" y="229" width="172.3" height="15.0" fill="rgb(205,170,6)" rx="2" ry="2" />
<text  x="126.12" y="239.5" >release_pages</text>
</g>
<g >
<title>drm_gem_shmem_vmap (1 samples, 0.22%)</title><rect x="303.1" y="309" width="2.5" height="15.0" fill="rgb(248,85,8)" rx="2" ry="2" />
<text  x="306.07" y="319.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.22%)</title><rect x="339.1" y="277" width="2.5" height="15.0" fill="rgb(223,136,6)" rx="2" ry="2" />
<text  x="342.06" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.22%)</title><rect x="1159.2" y="261" width="2.5" height="15.0" fill="rgb(226,123,31)" rx="2" ry="2" />
<text  x="1162.15" y="271.5" ></text>
</g>
<g >
<title>_perf_ioctl (256 samples, 55.77%)</title><rect x="477.9" y="261" width="658.1" height="15.0" fill="rgb(209,34,38)" rx="2" ry="2" />
<text  x="480.89" y="271.5" >_perf_ioctl</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.44%)</title><rect x="1156.6" y="325" width="5.1" height="15.0" fill="rgb(210,201,2)" rx="2" ry="2" />
<text  x="1159.58" y="335.5" ></text>
</g>
<g >
<title>cap_safe_nice (1 samples, 0.22%)</title><rect x="459.9" y="245" width="2.6" height="15.0" fill="rgb(216,145,5)" rx="2" ry="2" />
<text  x="462.89" y="255.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.22%)</title><rect x="305.6" y="357" width="2.6" height="15.0" fill="rgb(223,49,40)" rx="2" ry="2" />
<text  x="308.64" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="313.4" y="469" width="2.5" height="15.0" fill="rgb(208,129,28)" rx="2" ry="2" />
<text  x="316.36" y="479.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="305.6" y="405" width="2.6" height="15.0" fill="rgb(211,59,54)" rx="2" ry="2" />
<text  x="308.64" y="415.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="300.5" y="453" width="2.6" height="15.0" fill="rgb(218,59,36)" rx="2" ry="2" />
<text  x="303.50" y="463.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.22%)</title><rect x="318.5" y="341" width="2.6" height="15.0" fill="rgb(211,80,50)" rx="2" ry="2" />
<text  x="321.50" y="351.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.22%)</title><rect x="300.5" y="341" width="2.6" height="15.0" fill="rgb(206,59,26)" rx="2" ry="2" />
<text  x="303.50" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.44%)</title><rect x="187.4" y="213" width="5.1" height="15.0" fill="rgb(206,131,8)" rx="2" ry="2" />
<text  x="190.39" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (2 samples, 0.44%)</title><rect x="290.2" y="213" width="5.2" height="15.0" fill="rgb(241,136,7)" rx="2" ry="2" />
<text  x="293.22" y="223.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="321.1" y="453" width="2.5" height="15.0" fill="rgb(245,128,29)" rx="2" ry="2" />
<text  x="324.07" y="463.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="303.1" y="453" width="2.5" height="15.0" fill="rgb(208,15,1)" rx="2" ry="2" />
<text  x="306.07" y="463.5" ></text>
</g>
<g >
<title>__libc_start_main (317 samples, 69.06%)</title><rect x="323.6" y="469" width="815.0" height="15.0" fill="rgb(249,95,25)" rx="2" ry="2" />
<text  x="326.64" y="479.5" >__libc_start_main</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.44%)</title><rect x="1156.6" y="341" width="5.1" height="15.0" fill="rgb(241,65,46)" rx="2" ry="2" />
<text  x="1159.58" y="351.5" ></text>
</g>
<g >
<title>kworker/31:1-ev (1 samples, 0.22%)</title><rect x="303.1" y="485" width="2.5" height="15.0" fill="rgb(238,169,30)" rx="2" ry="2" />
<text  x="306.07" y="495.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.44%)</title><rect x="357.1" y="197" width="5.1" height="15.0" fill="rgb(238,135,5)" rx="2" ry="2" />
<text  x="360.06" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.44%)</title><rect x="372.5" y="181" width="5.1" height="15.0" fill="rgb(247,226,40)" rx="2" ry="2" />
<text  x="375.48" y="191.5" ></text>
</g>
<g >
<title>mmput (112 samples, 24.40%)</title><rect x="10.0" y="341" width="287.9" height="15.0" fill="rgb(226,201,12)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >mmput</text>
</g>
<g >
<title>cgroup_rstat_updated (3 samples, 0.65%)</title><rect x="174.5" y="181" width="7.7" height="15.0" fill="rgb(209,20,43)" rx="2" ry="2" />
<text  x="177.53" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="1151.4" y="453" width="2.6" height="15.0" fill="rgb(205,30,5)" rx="2" ry="2" />
<text  x="1154.44" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.22%)</title><rect x="1146.3" y="421" width="2.6" height="15.0" fill="rgb(221,26,49)" rx="2" ry="2" />
<text  x="1149.30" y="431.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.22%)</title><rect x="1146.3" y="341" width="2.6" height="15.0" fill="rgb(249,36,26)" rx="2" ry="2" />
<text  x="1149.30" y="351.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.44%)</title><rect x="470.2" y="277" width="5.1" height="15.0" fill="rgb(250,63,10)" rx="2" ry="2" />
<text  x="473.17" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="300.5" y="469" width="2.6" height="15.0" fill="rgb(220,29,27)" rx="2" ry="2" />
<text  x="303.50" y="479.5" ></text>
</g>
<g >
<title>free_swap_cache (3 samples, 0.65%)</title><rect x="115.4" y="229" width="7.7" height="15.0" fill="rgb(236,112,11)" rx="2" ry="2" />
<text  x="118.40" y="239.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.22%)</title><rect x="308.2" y="341" width="2.6" height="15.0" fill="rgb(242,101,19)" rx="2" ry="2" />
<text  x="311.21" y="351.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.22%)</title><rect x="426.5" y="133" width="2.5" height="15.0" fill="rgb(206,106,14)" rx="2" ry="2" />
<text  x="429.47" y="143.5" ></text>
</g>
<g >
<title>wait_for_completion (2 samples, 0.44%)</title><rect x="426.5" y="213" width="5.1" height="15.0" fill="rgb(246,80,34)" rx="2" ry="2" />
<text  x="429.47" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1146.3" y="437" width="2.6" height="15.0" fill="rgb(239,107,14)" rx="2" ry="2" />
<text  x="1149.30" y="447.5" ></text>
</g>
<g >
<title>uncharge_folio (7 samples, 1.53%)</title><rect x="148.8" y="197" width="18.0" height="15.0" fill="rgb(236,101,12)" rx="2" ry="2" />
<text  x="151.82" y="207.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.22%)</title><rect x="359.6" y="165" width="2.6" height="15.0" fill="rgb(229,26,22)" rx="2" ry="2" />
<text  x="362.63" y="175.5" ></text>
</g>
<g >
<title>try_to_wake_up (14 samples, 3.05%)</title><rect x="382.8" y="165" width="36.0" height="15.0" fill="rgb(235,171,26)" rx="2" ry="2" />
<text  x="385.77" y="175.5" >try..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (13 samples, 2.83%)</title><rect x="1156.6" y="469" width="33.4" height="15.0" fill="rgb(231,68,39)" rx="2" ry="2" />
<text  x="1159.58" y="479.5" >se..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.22%)</title><rect x="1143.7" y="421" width="2.6" height="15.0" fill="rgb(237,200,21)" rx="2" ry="2" />
<text  x="1146.73" y="431.5" ></text>
</g>
<g >
<title>main (317 samples, 69.06%)</title><rect x="323.6" y="453" width="815.0" height="15.0" fill="rgb(226,43,46)" rx="2" ry="2" />
<text  x="326.64" y="463.5" >main</text>
</g>
<g >
<title>preempt_schedule_common (2 samples, 0.44%)</title><rect x="426.5" y="181" width="5.1" height="15.0" fill="rgb(254,26,22)" rx="2" ry="2" />
<text  x="429.47" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (54 samples, 11.76%)</title><rect x="326.2" y="341" width="138.8" height="15.0" fill="rgb(254,7,22)" rx="2" ry="2" />
<text  x="329.21" y="351.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>ixgbe_read_i2c_eeprom_generic (1 samples, 0.22%)</title><rect x="313.4" y="357" width="2.5" height="15.0" fill="rgb(234,37,40)" rx="2" ry="2" />
<text  x="316.36" y="367.5" ></text>
</g>
<g >
<title>drm_gem_shmem_object_vmap (1 samples, 0.22%)</title><rect x="303.1" y="325" width="2.5" height="15.0" fill="rgb(233,176,38)" rx="2" ry="2" />
<text  x="306.07" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (256 samples, 55.77%)</title><rect x="477.9" y="181" width="658.1" height="15.0" fill="rgb(246,132,50)" rx="2" ry="2" />
<text  x="480.89" y="191.5" >generic_exec_single</text>
</g>
<g >
<title>schedule (2 samples, 0.44%)</title><rect x="308.2" y="421" width="5.2" height="15.0" fill="rgb(245,176,0)" rx="2" ry="2" />
<text  x="311.21" y="431.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="426.5" y="165" width="2.5" height="15.0" fill="rgb(206,158,3)" rx="2" ry="2" />
<text  x="429.47" y="175.5" ></text>
</g>
<g >
<title>gups (112 samples, 24.40%)</title><rect x="10.0" y="485" width="287.9" height="15.0" fill="rgb(205,215,46)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >gups</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.22%)</title><rect x="1184.9" y="373" width="2.5" height="15.0" fill="rgb(226,56,31)" rx="2" ry="2" />
<text  x="1187.86" y="383.5" ></text>
</g>
<g >
<title>perf_ctx_enable (256 samples, 55.77%)</title><rect x="477.9" y="101" width="658.1" height="15.0" fill="rgb(219,22,43)" rx="2" ry="2" />
<text  x="480.89" y="111.5" >perf_ctx_enable</text>
</g>
<g >
<title>kworker/0:2-eve (1 samples, 0.22%)</title><rect x="300.5" y="485" width="2.6" height="15.0" fill="rgb(223,30,21)" rx="2" ry="2" />
<text  x="303.50" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.44%)</title><rect x="1156.6" y="309" width="5.1" height="15.0" fill="rgb(210,74,18)" rx="2" ry="2" />
<text  x="1159.58" y="319.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.22%)</title><rect x="303.1" y="437" width="2.5" height="15.0" fill="rgb(222,161,24)" rx="2" ry="2" />
<text  x="306.07" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (1 samples, 0.22%)</title><rect x="287.6" y="213" width="2.6" height="15.0" fill="rgb(237,203,10)" rx="2" ry="2" />
<text  x="290.65" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="1143.7" y="453" width="2.6" height="15.0" fill="rgb(222,71,38)" rx="2" ry="2" />
<text  x="1146.73" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="1187.4" y="389" width="2.6" height="15.0" fill="rgb(244,92,9)" rx="2" ry="2" />
<text  x="1190.43" y="399.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.87%)</title><rect x="408.5" y="133" width="10.3" height="15.0" fill="rgb(206,55,14)" rx="2" ry="2" />
<text  x="411.47" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.22%)</title><rect x="1141.2" y="405" width="2.5" height="15.0" fill="rgb(222,135,5)" rx="2" ry="2" />
<text  x="1144.15" y="415.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.22%)</title><rect x="315.9" y="341" width="2.6" height="15.0" fill="rgb(207,202,23)" rx="2" ry="2" />
<text  x="318.93" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (256 samples, 55.77%)</title><rect x="477.9" y="245" width="658.1" height="15.0" fill="rgb(246,197,20)" rx="2" ry="2" />
<text  x="480.89" y="255.5" >perf_event_for_each_child</text>
</g>
<g >
<title>do_task_stat (1 samples, 0.22%)</title><rect x="1146.3" y="309" width="2.6" height="15.0" fill="rgb(205,87,9)" rx="2" ry="2" />
<text  x="1149.30" y="319.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.22%)</title><rect x="315.9" y="325" width="2.6" height="15.0" fill="rgb(251,13,0)" rx="2" ry="2" />
<text  x="318.93" y="335.5" ></text>
</g>
<g >
<title>__GI___ioctl (260 samples, 56.64%)</title><rect x="467.6" y="341" width="668.4" height="15.0" fill="rgb(254,27,5)" rx="2" ry="2" />
<text  x="470.60" y="351.5" >__GI___ioctl</text>
</g>
<g >
<title>__mod_lruvec_state (8 samples, 1.74%)</title><rect x="166.8" y="213" width="20.6" height="15.0" fill="rgb(249,88,36)" rx="2" ry="2" />
<text  x="169.82" y="223.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.22%)</title><rect x="318.5" y="437" width="2.6" height="15.0" fill="rgb(227,134,51)" rx="2" ry="2" />
<text  x="321.50" y="447.5" ></text>
</g>
<g >
<title>ixgbe_i2c_bus_clear (1 samples, 0.22%)</title><rect x="313.4" y="309" width="2.5" height="15.0" fill="rgb(213,129,45)" rx="2" ry="2" />
<text  x="316.36" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (74 samples, 16.12%)</title><rect x="105.1" y="261" width="190.3" height="15.0" fill="rgb(242,124,28)" rx="2" ry="2" />
<text  x="108.12" y="271.5" >tlb_flush_mmu</text>
</g>
<g >
<title>kthread_is_per_cpu (2 samples, 0.44%)</title><rect x="385.3" y="149" width="5.2" height="15.0" fill="rgb(242,117,46)" rx="2" ry="2" />
<text  x="388.34" y="159.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.22%)</title><rect x="197.7" y="213" width="2.5" height="15.0" fill="rgb(239,162,39)" rx="2" ry="2" />
<text  x="200.67" y="223.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.22%)</title><rect x="300.5" y="389" width="2.6" height="15.0" fill="rgb(253,86,40)" rx="2" ry="2" />
<text  x="303.50" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.22%)</title><rect x="1156.6" y="277" width="2.6" height="15.0" fill="rgb(225,77,10)" rx="2" ry="2" />
<text  x="1159.58" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.22%)</title><rect x="1182.3" y="373" width="2.6" height="15.0" fill="rgb(234,107,5)" rx="2" ry="2" />
<text  x="1185.29" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2 samples, 0.44%)</title><rect x="1156.6" y="373" width="5.1" height="15.0" fill="rgb(213,178,12)" rx="2" ry="2" />
<text  x="1159.58" y="383.5" ></text>
</g>
<g >
<title>swapper (13 samples, 2.83%)</title><rect x="1156.6" y="485" width="33.4" height="15.0" fill="rgb(238,97,1)" rx="2" ry="2" />
<text  x="1159.58" y="495.5" >sw..</text>
</g>
<g >
<title>__kmalloc_node (3 samples, 0.65%)</title><rect x="436.8" y="245" width="7.7" height="15.0" fill="rgb(217,12,41)" rx="2" ry="2" />
<text  x="439.75" y="255.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.22%)</title><rect x="300.5" y="373" width="2.6" height="15.0" fill="rgb(246,116,30)" rx="2" ry="2" />
<text  x="303.50" y="383.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (261 samples, 56.86%)</title><rect x="465.0" y="373" width="671.0" height="15.0" fill="rgb(215,82,46)" rx="2" ry="2" />
<text  x="468.03" y="383.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.22%)</title><rect x="321.1" y="437" width="2.5" height="15.0" fill="rgb(227,130,24)" rx="2" ry="2" />
<text  x="324.07" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="300.5" y="405" width="2.6" height="15.0" fill="rgb(210,188,37)" rx="2" ry="2" />
<text  x="303.50" y="415.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="305.6" y="469" width="2.6" height="15.0" fill="rgb(243,162,32)" rx="2" ry="2" />
<text  x="308.64" y="479.5" ></text>
</g>
<g >
<title>call_cpuidle (10 samples, 2.18%)</title><rect x="1156.6" y="405" width="25.7" height="15.0" fill="rgb(213,7,15)" rx="2" ry="2" />
<text  x="1159.58" y="415.5" >c..</text>
</g>
<g >
<title>__open64 (1 samples, 0.22%)</title><rect x="1141.2" y="453" width="2.5" height="15.0" fill="rgb(215,99,3)" rx="2" ry="2" />
<text  x="1144.15" y="463.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.22%)</title><rect x="89.7" y="197" width="2.6" height="15.0" fill="rgb(229,25,34)" rx="2" ry="2" />
<text  x="92.69" y="207.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.22%)</title><rect x="413.6" y="117" width="2.6" height="15.0" fill="rgb(236,89,37)" rx="2" ry="2" />
<text  x="416.62" y="127.5" ></text>
</g>
<g >
<title>stop_one_cpu_nowait (22 samples, 4.79%)</title><rect x="369.9" y="213" width="56.6" height="15.0" fill="rgb(247,136,45)" rx="2" ry="2" />
<text  x="372.91" y="223.5" >stop_..</text>
</g>
<g >
<title>kthread (2 samples, 0.44%)</title><rect x="308.2" y="453" width="5.2" height="15.0" fill="rgb(212,162,18)" rx="2" ry="2" />
<text  x="311.21" y="463.5" ></text>
</g>
<g >
<title>kworker/32:1-ev (1 samples, 0.22%)</title><rect x="305.6" y="485" width="2.6" height="15.0" fill="rgb(216,129,19)" rx="2" ry="2" />
<text  x="308.64" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.44%)</title><rect x="308.2" y="389" width="5.2" height="15.0" fill="rgb(254,205,32)" rx="2" ry="2" />
<text  x="311.21" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.22%)</title><rect x="318.5" y="421" width="2.6" height="15.0" fill="rgb(250,213,23)" rx="2" ry="2" />
<text  x="321.50" y="431.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.22%)</title><rect x="426.5" y="149" width="2.5" height="15.0" fill="rgb(221,36,48)" rx="2" ry="2" />
<text  x="429.47" y="159.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (33 samples, 7.19%)</title><rect x="351.9" y="261" width="84.9" height="15.0" fill="rgb(235,173,50)" rx="2" ry="2" />
<text  x="354.92" y="271.5" >__set_cpu..</text>
</g>
<g >
<title>ctx_resched (256 samples, 55.77%)</title><rect x="477.9" y="117" width="658.1" height="15.0" fill="rgb(207,145,9)" rx="2" ry="2" />
<text  x="480.89" y="127.5" >ctx_resched</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1143.7" y="437" width="2.6" height="15.0" fill="rgb(250,60,20)" rx="2" ry="2" />
<text  x="1146.73" y="447.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.22%)</title><rect x="1141.2" y="309" width="2.5" height="15.0" fill="rgb(222,106,34)" rx="2" ry="2" />
<text  x="1144.15" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.22%)</title><rect x="182.2" y="197" width="2.6" height="15.0" fill="rgb(217,121,50)" rx="2" ry="2" />
<text  x="185.24" y="207.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.22%)</title><rect x="321.1" y="469" width="2.5" height="15.0" fill="rgb(208,23,9)" rx="2" ry="2" />
<text  x="324.07" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1151.4" y="437" width="2.6" height="15.0" fill="rgb(226,53,12)" rx="2" ry="2" />
<text  x="1154.44" y="447.5" ></text>
</g>
<g >
<title>drm_fbdev_fb_dirty (1 samples, 0.22%)</title><rect x="303.1" y="389" width="2.5" height="15.0" fill="rgb(232,127,19)" rx="2" ry="2" />
<text  x="306.07" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.22%)</title><rect x="300.5" y="421" width="2.6" height="15.0" fill="rgb(209,16,29)" rx="2" ry="2" />
<text  x="303.50" y="431.5" ></text>
</g>
<g >
<title>drm_client_buffer_vmap (1 samples, 0.22%)</title><rect x="303.1" y="373" width="2.5" height="15.0" fill="rgb(227,224,23)" rx="2" ry="2" />
<text  x="306.07" y="383.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (3 samples, 0.65%)</title><rect x="107.7" y="229" width="7.7" height="15.0" fill="rgb(222,55,21)" rx="2" ry="2" />
<text  x="110.69" y="239.5" ></text>
</g>
<g >
<title>get_user_cpu_mask (5 samples, 1.09%)</title><rect x="339.1" y="293" width="12.8" height="15.0" fill="rgb(217,18,53)" rx="2" ry="2" />
<text  x="342.06" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_free (1 samples, 0.22%)</title><rect x="1136.0" y="277" width="2.6" height="15.0" fill="rgb(205,113,4)" rx="2" ry="2" />
<text  x="1139.01" y="287.5" ></text>
</g>
<g >
<title>sleep (1 samples, 0.22%)</title><rect x="1154.0" y="485" width="2.6" height="15.0" fill="rgb(240,90,40)" rx="2" ry="2" />
<text  x="1157.01" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.22%)</title><rect x="1151.4" y="405" width="2.6" height="15.0" fill="rgb(248,150,50)" rx="2" ry="2" />
<text  x="1154.44" y="415.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.22%)</title><rect x="416.2" y="117" width="2.6" height="15.0" fill="rgb(225,32,34)" rx="2" ry="2" />
<text  x="419.19" y="127.5" ></text>
</g>
<g >
<title>event_function (256 samples, 55.77%)</title><rect x="477.9" y="149" width="658.1" height="15.0" fill="rgb(226,55,41)" rx="2" ry="2" />
<text  x="480.89" y="159.5" >event_function</text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (2 samples, 0.44%)</title><rect x="1182.3" y="389" width="5.1" height="15.0" fill="rgb(236,5,38)" rx="2" ry="2" />
<text  x="1185.29" y="399.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.22%)</title><rect x="303.1" y="421" width="2.5" height="15.0" fill="rgb(220,33,53)" rx="2" ry="2" />
<text  x="306.07" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13 samples, 2.83%)</title><rect x="1156.6" y="437" width="33.4" height="15.0" fill="rgb(228,203,41)" rx="2" ry="2" />
<text  x="1159.58" y="447.5" >cp..</text>
</g>
<g >
<title>ixgbe_read_i2c_byte_generic (1 samples, 0.22%)</title><rect x="313.4" y="341" width="2.5" height="15.0" fill="rgb(248,229,42)" rx="2" ry="2" />
<text  x="316.36" y="351.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (1 samples, 0.22%)</title><rect x="1184.9" y="357" width="2.5" height="15.0" fill="rgb(207,46,36)" rx="2" ry="2" />
<text  x="1187.86" y="367.5" ></text>
</g>
<g >
<title>perf (317 samples, 69.06%)</title><rect x="323.6" y="485" width="815.0" height="15.0" fill="rgb(234,3,30)" rx="2" ry="2" />
<text  x="326.64" y="495.5" >perf</text>
</g>
<g >
<title>__libc_read (1 samples, 0.22%)</title><rect x="1146.3" y="469" width="2.6" height="15.0" fill="rgb(252,96,13)" rx="2" ry="2" />
<text  x="1149.30" y="479.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.22%)</title><rect x="321.1" y="389" width="2.5" height="15.0" fill="rgb(231,57,0)" rx="2" ry="2" />
<text  x="324.07" y="399.5" ></text>
</g>
<g >
<title>migration/3 (1 samples, 0.22%)</title><rect x="318.5" y="485" width="2.6" height="15.0" fill="rgb(207,210,54)" rx="2" ry="2" />
<text  x="321.50" y="495.5" ></text>
</g>
<g >
<title>unmap_page_range (110 samples, 23.97%)</title><rect x="12.6" y="277" width="282.8" height="15.0" fill="rgb(211,159,50)" rx="2" ry="2" />
<text  x="15.57" y="287.5" >unmap_page_range</text>
</g>
<g >
<title>cpuidle_enter (10 samples, 2.18%)</title><rect x="1156.6" y="389" width="25.7" height="15.0" fill="rgb(209,229,17)" rx="2" ry="2" />
<text  x="1159.58" y="399.5" >c..</text>
</g>
<g >
<title>alloc_user_cpus_ptr (1 samples, 0.22%)</title><rect x="444.5" y="277" width="2.5" height="15.0" fill="rgb(247,199,52)" rx="2" ry="2" />
<text  x="447.47" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (1 samples, 0.22%)</title><rect x="444.5" y="261" width="2.5" height="15.0" fill="rgb(209,224,26)" rx="2" ry="2" />
<text  x="447.47" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.22%)</title><rect x="315.9" y="437" width="2.6" height="15.0" fill="rgb(244,201,42)" rx="2" ry="2" />
<text  x="318.93" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (256 samples, 55.77%)</title><rect x="477.9" y="85" width="658.1" height="15.0" fill="rgb(209,63,18)" rx="2" ry="2" />
<text  x="480.89" y="95.5" >perf_pmu_enable.part.0</text>
</g>
<g >
<title>perf_evsel__ioctl (1 samples, 0.22%)</title><rect x="465.0" y="357" width="2.6" height="15.0" fill="rgb(235,202,7)" rx="2" ry="2" />
<text  x="468.03" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_list (34 samples, 7.41%)</title><rect x="200.2" y="213" width="87.4" height="15.0" fill="rgb(227,52,51)" rx="2" ry="2" />
<text  x="203.24" y="223.5" >free_unref..</text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.22%)</title><rect x="426.5" y="101" width="2.5" height="15.0" fill="rgb(234,132,44)" rx="2" ry="2" />
<text  x="429.47" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="1146.3" y="453" width="2.6" height="15.0" fill="rgb(238,98,4)" rx="2" ry="2" />
<text  x="1149.30" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (112 samples, 24.40%)</title><rect x="10.0" y="373" width="287.9" height="15.0" fill="rgb(238,134,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >do_group_exit</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (54 samples, 11.76%)</title><rect x="326.2" y="357" width="138.8" height="15.0" fill="rgb(242,161,8)" rx="2" ry="2" />
<text  x="329.21" y="367.5" >sched_setaffinity..</text>
</g>
<g >
<title>__close (1 samples, 0.22%)</title><rect x="1143.7" y="469" width="2.6" height="15.0" fill="rgb(240,54,16)" rx="2" ry="2" />
<text  x="1146.73" y="479.5" ></text>
</g>
<g >
<title>get_signal (112 samples, 24.40%)</title><rect x="10.0" y="389" width="287.9" height="15.0" fill="rgb(252,73,18)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >get_signal</text>
</g>
<g >
<title>__evlist__enable (317 samples, 69.06%)</title><rect x="323.6" y="389" width="815.0" height="15.0" fill="rgb(228,224,45)" rx="2" ry="2" />
<text  x="326.64" y="399.5" >__evlist__enable</text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (10 samples, 2.18%)</title><rect x="141.1" y="213" width="25.7" height="15.0" fill="rgb(251,191,25)" rx="2" ry="2" />
<text  x="144.11" y="223.5" >_..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.22%)</title><rect x="1159.2" y="277" width="2.5" height="15.0" fill="rgb(251,24,11)" rx="2" ry="2" />
<text  x="1162.15" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.22%)</title><rect x="184.8" y="197" width="2.6" height="15.0" fill="rgb(221,39,44)" rx="2" ry="2" />
<text  x="187.81" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (112 samples, 24.40%)</title><rect x="10.0" y="437" width="287.9" height="15.0" fill="rgb(230,187,48)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>do_syscall_64 (259 samples, 56.43%)</title><rect x="470.2" y="309" width="665.8" height="15.0" fill="rgb(243,9,17)" rx="2" ry="2" />
<text  x="473.17" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>do_idle (13 samples, 2.83%)</title><rect x="1156.6" y="421" width="33.4" height="15.0" fill="rgb(254,111,32)" rx="2" ry="2" />
<text  x="1159.58" y="431.5" >do..</text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="315.9" y="405" width="2.6" height="15.0" fill="rgb(242,106,54)" rx="2" ry="2" />
<text  x="318.93" y="415.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (3 samples, 0.65%)</title><rect x="436.8" y="261" width="7.7" height="15.0" fill="rgb(233,163,17)" rx="2" ry="2" />
<text  x="439.75" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.22%)</title><rect x="1136.0" y="325" width="2.6" height="15.0" fill="rgb(222,213,22)" rx="2" ry="2" />
<text  x="1139.01" y="335.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.22%)</title><rect x="195.1" y="213" width="2.6" height="15.0" fill="rgb(208,78,26)" rx="2" ry="2" />
<text  x="198.10" y="223.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.22%)</title><rect x="321.1" y="373" width="2.5" height="15.0" fill="rgb(217,22,20)" rx="2" ry="2" />
<text  x="324.07" y="383.5" ></text>
</g>
<g >
<title>drm_gem_shmem_get_pages (1 samples, 0.22%)</title><rect x="303.1" y="293" width="2.5" height="15.0" fill="rgb(254,96,33)" rx="2" ry="2" />
<text  x="306.07" y="303.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.44%)</title><rect x="308.2" y="373" width="5.2" height="15.0" fill="rgb(246,16,49)" rx="2" ry="2" />
<text  x="311.21" y="383.5" ></text>
</g>
<g >
<title>security_task_setscheduler (1 samples, 0.22%)</title><rect x="459.9" y="277" width="2.6" height="15.0" fill="rgb(218,74,30)" rx="2" ry="2" />
<text  x="462.89" y="287.5" ></text>
</g>
<g >
<title>ixgbe_read_reg (1 samples, 0.22%)</title><rect x="313.4" y="277" width="2.5" height="15.0" fill="rgb(206,227,28)" rx="2" ry="2" />
<text  x="316.36" y="287.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.44%)</title><rect x="279.9" y="165" width="5.2" height="15.0" fill="rgb(231,122,32)" rx="2" ry="2" />
<text  x="282.93" y="175.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.22%)</title><rect x="321.1" y="357" width="2.5" height="15.0" fill="rgb(230,33,2)" rx="2" ry="2" />
<text  x="324.07" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.22%)</title><rect x="53.7" y="261" width="2.6" height="15.0" fill="rgb(253,162,9)" rx="2" ry="2" />
<text  x="56.70" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (112 samples, 24.40%)</title><rect x="10.0" y="309" width="287.9" height="15.0" fill="rgb(223,148,54)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >unmap_vmas</text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.22%)</title><rect x="297.9" y="469" width="2.6" height="15.0" fill="rgb(205,182,39)" rx="2" ry="2" />
<text  x="300.93" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1136.0" y="341" width="2.6" height="15.0" fill="rgb(231,17,5)" rx="2" ry="2" />
<text  x="1139.01" y="351.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.22%)</title><rect x="1143.7" y="405" width="2.6" height="15.0" fill="rgb(245,168,45)" rx="2" ry="2" />
<text  x="1146.73" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (53 samples, 11.55%)</title><rect x="326.2" y="309" width="136.3" height="15.0" fill="rgb(228,81,16)" rx="2" ry="2" />
<text  x="329.21" y="319.5" >__x64_sys_sched_s..</text>
</g>
<g >
<title>wake_up_q (14 samples, 3.05%)</title><rect x="382.8" y="181" width="36.0" height="15.0" fill="rgb(222,125,53)" rx="2" ry="2" />
<text  x="385.77" y="191.5" >wak..</text>
</g>
<g >
<title>alloc_user_cpus_ptr (1 samples, 0.22%)</title><rect x="331.4" y="293" width="2.5" height="15.0" fill="rgb(247,96,12)" rx="2" ry="2" />
<text  x="334.35" y="303.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.22%)</title><rect x="475.3" y="277" width="2.6" height="15.0" fill="rgb(232,127,5)" rx="2" ry="2" />
<text  x="478.32" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (74 samples, 16.12%)</title><rect x="105.1" y="245" width="190.3" height="15.0" fill="rgb(246,30,10)" rx="2" ry="2" />
<text  x="108.12" y="255.5" >free_pages_and_swap_cache</text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.44%)</title><rect x="97.4" y="229" width="5.1" height="15.0" fill="rgb(208,221,35)" rx="2" ry="2" />
<text  x="100.41" y="239.5" ></text>
</g>
<g >
<title>drm_gem_shmem_get_pages_locked (1 samples, 0.22%)</title><rect x="303.1" y="277" width="2.5" height="15.0" fill="rgb(244,221,46)" rx="2" ry="2" />
<text  x="306.07" y="287.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="305.6" y="453" width="2.6" height="15.0" fill="rgb(209,165,49)" rx="2" ry="2" />
<text  x="308.64" y="463.5" ></text>
</g>
<g >
<title>unmap_single_vma (112 samples, 24.40%)</title><rect x="10.0" y="293" width="287.9" height="15.0" fill="rgb(231,125,6)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >unmap_single_vma</text>
</g>
<g >
<title>update_curr (1 samples, 0.22%)</title><rect x="426.5" y="117" width="2.5" height="15.0" fill="rgb(208,103,12)" rx="2" ry="2" />
<text  x="429.47" y="127.5" ></text>
</g>
<g >
<title>thread_group_cputime (1 samples, 0.22%)</title><rect x="1146.3" y="277" width="2.6" height="15.0" fill="rgb(238,34,45)" rx="2" ry="2" />
<text  x="1149.30" y="287.5" ></text>
</g>
<g >
<title>evlist_cpu_iterator__next (54 samples, 11.76%)</title><rect x="326.2" y="373" width="138.8" height="15.0" fill="rgb(223,73,3)" rx="2" ry="2" />
<text  x="329.21" y="383.5" >evlist_cpu_iterat..</text>
</g>
<g >
<title>balance_fair (1 samples, 0.22%)</title><rect x="315.9" y="389" width="2.6" height="15.0" fill="rgb(244,102,39)" rx="2" ry="2" />
<text  x="318.93" y="399.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="315.9" y="453" width="2.6" height="15.0" fill="rgb(232,152,8)" rx="2" ry="2" />
<text  x="318.93" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.44%)</title><rect x="1138.6" y="469" width="5.1" height="15.0" fill="rgb(254,192,1)" rx="2" ry="2" />
<text  x="1141.58" y="479.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.22%)</title><rect x="295.4" y="277" width="2.5" height="15.0" fill="rgb(234,181,35)" rx="2" ry="2" />
<text  x="298.36" y="287.5" ></text>
</g>
<g >
<title>x86_pmu_enable (256 samples, 55.77%)</title><rect x="477.9" y="69" width="658.1" height="15.0" fill="rgb(235,128,34)" rx="2" ry="2" />
<text  x="480.89" y="79.5" >x86_pmu_enable</text>
</g>
<g >
<title>kfree (1 samples, 0.22%)</title><rect x="1136.0" y="293" width="2.6" height="15.0" fill="rgb(210,167,5)" rx="2" ry="2" />
<text  x="1139.01" y="303.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.22%)</title><rect x="192.5" y="213" width="2.6" height="15.0" fill="rgb(238,19,2)" rx="2" ry="2" />
<text  x="195.53" y="223.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.44%)</title><rect x="341.6" y="277" width="5.2" height="15.0" fill="rgb(214,68,32)" rx="2" ry="2" />
<text  x="344.63" y="287.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.22%)</title><rect x="318.5" y="389" width="2.6" height="15.0" fill="rgb(252,54,20)" rx="2" ry="2" />
<text  x="321.50" y="399.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (32 samples, 6.97%)</title><rect x="354.5" y="245" width="82.3" height="15.0" fill="rgb(238,174,0)" rx="2" ry="2" />
<text  x="357.49" y="255.5" >__set_cpu..</text>
</g>
<g >
<title>load_balance (1 samples, 0.22%)</title><rect x="315.9" y="357" width="2.6" height="15.0" fill="rgb(243,94,43)" rx="2" ry="2" />
<text  x="318.93" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.22%)</title><rect x="1159.2" y="229" width="2.5" height="15.0" fill="rgb(210,143,18)" rx="2" ry="2" />
<text  x="1162.15" y="239.5" ></text>
</g>
<g >
<title>affine_move_task (26 samples, 5.66%)</title><rect x="364.8" y="229" width="66.8" height="15.0" fill="rgb(205,211,17)" rx="2" ry="2" />
<text  x="367.77" y="239.5" >affine_..</text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.22%)</title><rect x="102.5" y="229" width="2.6" height="15.0" fill="rgb(234,126,39)" rx="2" ry="2" />
<text  x="105.55" y="239.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.22%)</title><rect x="305.6" y="437" width="2.6" height="15.0" fill="rgb(243,111,47)" rx="2" ry="2" />
<text  x="308.64" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2 samples, 0.44%)</title><rect x="143.7" y="197" width="5.1" height="15.0" fill="rgb(243,58,25)" rx="2" ry="2" />
<text  x="146.68" y="207.5" ></text>
</g>
<g >
<title>__do_set_cpus_allowed (3 samples, 0.65%)</title><rect x="354.5" y="229" width="7.7" height="15.0" fill="rgb(220,135,4)" rx="2" ry="2" />
<text  x="357.49" y="239.5" ></text>
</g>
<g >
<title>kworker/43:2-ev (2 samples, 0.44%)</title><rect x="308.2" y="485" width="5.2" height="15.0" fill="rgb(217,110,4)" rx="2" ry="2" />
<text  x="311.21" y="495.5" ></text>
</g>
<g >
<title>drm_gem_vmap (1 samples, 0.22%)</title><rect x="303.1" y="341" width="2.5" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="306.07" y="351.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.22%)</title><rect x="1136.0" y="309" width="2.6" height="15.0" fill="rgb(220,154,42)" rx="2" ry="2" />
<text  x="1139.01" y="319.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.22%)</title><rect x="346.8" y="277" width="2.5" height="15.0" fill="rgb(233,87,45)" rx="2" ry="2" />
<text  x="349.78" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.22%)</title><rect x="1159.2" y="245" width="2.5" height="15.0" fill="rgb(222,209,16)" rx="2" ry="2" />
<text  x="1162.15" y="255.5" ></text>
</g>
<g >
<title>htop (1 samples, 0.22%)</title><rect x="297.9" y="485" width="2.6" height="15.0" fill="rgb(246,32,3)" rx="2" ry="2" />
<text  x="300.93" y="495.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.22%)</title><rect x="305.6" y="373" width="2.6" height="15.0" fill="rgb(237,62,14)" rx="2" ry="2" />
<text  x="308.64" y="383.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.22%)</title><rect x="1136.0" y="261" width="2.6" height="15.0" fill="rgb(208,6,51)" rx="2" ry="2" />
<text  x="1139.01" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (1 samples, 0.22%)</title><rect x="439.3" y="229" width="2.6" height="15.0" fill="rgb(253,155,36)" rx="2" ry="2" />
<text  x="442.32" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.22%)</title><rect x="1159.2" y="213" width="2.5" height="15.0" fill="rgb(206,222,41)" rx="2" ry="2" />
<text  x="1162.15" y="223.5" ></text>
</g>
<g >
<title>check_same_owner (2 samples, 0.44%)</title><rect x="333.9" y="293" width="5.2" height="15.0" fill="rgb(211,197,45)" rx="2" ry="2" />
<text  x="336.92" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.22%)</title><rect x="105.1" y="229" width="2.6" height="15.0" fill="rgb(223,32,46)" rx="2" ry="2" />
<text  x="108.12" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.22%)</title><rect x="318.5" y="405" width="2.6" height="15.0" fill="rgb(228,144,17)" rx="2" ry="2" />
<text  x="321.50" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (112 samples, 24.40%)</title><rect x="10.0" y="453" width="287.9" height="15.0" fill="rgb(208,45,38)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>vfs_read (1 samples, 0.22%)</title><rect x="1146.3" y="389" width="2.6" height="15.0" fill="rgb(220,132,11)" rx="2" ry="2" />
<text  x="1149.30" y="399.5" ></text>
</g>
<g >
<title>wake_q_add (2 samples, 0.44%)</title><rect x="377.6" y="181" width="5.2" height="15.0" fill="rgb(224,63,40)" rx="2" ry="2" />
<text  x="380.63" y="191.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.22%)</title><rect x="318.5" y="357" width="2.6" height="15.0" fill="rgb(242,169,25)" rx="2" ry="2" />
<text  x="321.50" y="367.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5 samples, 1.09%)</title><rect x="169.4" y="197" width="12.8" height="15.0" fill="rgb(212,59,20)" rx="2" ry="2" />
<text  x="172.39" y="207.5" ></text>
</g>
<g >
<title>_dl_addr (1 samples, 0.22%)</title><rect x="1154.0" y="469" width="2.6" height="15.0" fill="rgb(244,167,42)" rx="2" ry="2" />
<text  x="1157.01" y="479.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.44%)</title><rect x="92.3" y="229" width="5.1" height="15.0" fill="rgb(230,183,32)" rx="2" ry="2" />
<text  x="95.27" y="239.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.22%)</title><rect x="1141.2" y="373" width="2.5" height="15.0" fill="rgb(242,108,7)" rx="2" ry="2" />
<text  x="1144.15" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.22%)</title><rect x="305.6" y="421" width="2.6" height="15.0" fill="rgb(206,209,2)" rx="2" ry="2" />
<text  x="308.64" y="431.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="313.4" y="453" width="2.5" height="15.0" fill="rgb(248,226,18)" rx="2" ry="2" />
<text  x="316.36" y="463.5" ></text>
</g>
<g >
<title>migration/56 (1 samples, 0.22%)</title><rect x="321.1" y="485" width="2.5" height="15.0" fill="rgb(228,190,45)" rx="2" ry="2" />
<text  x="324.07" y="495.5" ></text>
</g>
<g >
<title>step_into (1 samples, 0.22%)</title><rect x="1141.2" y="293" width="2.5" height="15.0" fill="rgb(238,223,28)" rx="2" ry="2" />
<text  x="1144.15" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (256 samples, 55.77%)</title><rect x="477.9" y="197" width="658.1" height="15.0" fill="rgb(228,66,29)" rx="2" ry="2" />
<text  x="480.89" y="207.5" >smp_call_function_single</text>
</g>
<g >
<title>intel_idle (8 samples, 1.74%)</title><rect x="1161.7" y="373" width="20.6" height="15.0" fill="rgb(246,164,10)" rx="2" ry="2" />
<text  x="1164.72" y="383.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.22%)</title><rect x="1146.3" y="405" width="2.6" height="15.0" fill="rgb(245,26,8)" rx="2" ry="2" />
<text  x="1149.30" y="415.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.22%)</title><rect x="318.5" y="453" width="2.6" height="15.0" fill="rgb(239,17,31)" rx="2" ry="2" />
<text  x="321.50" y="463.5" ></text>
</g>
<g >
<title>ttwu_do_activate (11 samples, 2.40%)</title><rect x="390.5" y="149" width="28.3" height="15.0" fill="rgb(240,221,15)" rx="2" ry="2" />
<text  x="393.48" y="159.5" >t..</text>
</g>
<g >
<title>entry_SYSCALL_64 (112 samples, 24.40%)</title><rect x="10.0" y="469" width="287.9" height="15.0" fill="rgb(245,2,18)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>epoll_wait (1 samples, 0.22%)</title><rect x="1151.4" y="469" width="2.6" height="15.0" fill="rgb(241,131,3)" rx="2" ry="2" />
<text  x="1154.44" y="479.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (1 samples, 0.22%)</title><rect x="1138.6" y="453" width="2.6" height="15.0" fill="rgb(243,50,53)" rx="2" ry="2" />
<text  x="1141.58" y="463.5" ></text>
</g>
<g >
<title>event_function_call (256 samples, 55.77%)</title><rect x="477.9" y="213" width="658.1" height="15.0" fill="rgb(219,147,47)" rx="2" ry="2" />
<text  x="480.89" y="223.5" >event_function_call</text>
</g>
<g >
<title>alloc_cpumask_var_node (2 samples, 0.44%)</title><rect x="326.2" y="293" width="5.2" height="15.0" fill="rgb(216,98,36)" rx="2" ry="2" />
<text  x="329.21" y="303.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.22%)</title><rect x="441.9" y="229" width="2.6" height="15.0" fill="rgb(217,62,17)" rx="2" ry="2" />
<text  x="444.90" y="239.5" ></text>
</g>
<g >
<title>all (459 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(227,109,28)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>task_sched_runtime (1 samples, 0.22%)</title><rect x="1146.3" y="261" width="2.6" height="15.0" fill="rgb(230,104,30)" rx="2" ry="2" />
<text  x="1149.30" y="271.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.22%)</title><rect x="1143.7" y="389" width="2.6" height="15.0" fill="rgb(205,116,14)" rx="2" ry="2" />
<text  x="1146.73" y="399.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.22%)</title><rect x="313.4" y="421" width="2.5" height="15.0" fill="rgb(222,15,40)" rx="2" ry="2" />
<text  x="316.36" y="431.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.22%)</title><rect x="1141.2" y="325" width="2.5" height="15.0" fill="rgb(233,220,49)" rx="2" ry="2" />
<text  x="1144.15" y="335.5" ></text>
</g>
<g >
<title>sched_setaffinity (43 samples, 9.37%)</title><rect x="351.9" y="293" width="110.6" height="15.0" fill="rgb(207,206,14)" rx="2" ry="2" />
<text  x="354.92" y="303.5" >sched_setaffi..</text>
</g>
<g >
<title>entry_SYSCALL_64 (260 samples, 56.64%)</title><rect x="467.6" y="325" width="668.4" height="15.0" fill="rgb(243,15,10)" rx="2" ry="2" />
<text  x="470.60" y="335.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>page_remove_rmap (19 samples, 4.14%)</title><rect x="56.3" y="261" width="48.8" height="15.0" fill="rgb(234,178,8)" rx="2" ry="2" />
<text  x="59.27" y="271.5" >page..</text>
</g>
<g >
<title>ixgbe_read_i2c_byte_generic_int (1 samples, 0.22%)</title><rect x="313.4" y="325" width="2.5" height="15.0" fill="rgb(252,213,31)" rx="2" ry="2" />
<text  x="316.36" y="335.5" ></text>
</g>
<g >
<title>__sched_setaffinity (36 samples, 7.84%)</title><rect x="351.9" y="277" width="92.6" height="15.0" fill="rgb(214,66,50)" rx="2" ry="2" />
<text  x="354.92" y="287.5" >__sched_set..</text>
</g>
<g >
<title>arch_do_signal_or_restart (112 samples, 24.40%)</title><rect x="10.0" y="405" width="287.9" height="15.0" fill="rgb(233,6,45)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >arch_do_signal_or_restart</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.22%)</title><rect x="10.0" y="277" width="2.6" height="15.0" fill="rgb(250,217,33)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.22%)</title><rect x="310.8" y="357" width="2.6" height="15.0" fill="rgb(254,154,11)" rx="2" ry="2" />
<text  x="313.78" y="367.5" ></text>
</g>
<g >
<title>cmd_record (317 samples, 69.06%)</title><rect x="323.6" y="421" width="815.0" height="15.0" fill="rgb(208,224,1)" rx="2" ry="2" />
<text  x="326.64" y="431.5" >cmd_record</text>
</g>
<g >
<title>__perf_event_enable (256 samples, 55.77%)</title><rect x="477.9" y="133" width="658.1" height="15.0" fill="rgb(224,40,39)" rx="2" ry="2" />
<text  x="480.89" y="143.5" >__perf_event_enable</text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.22%)</title><rect x="1146.3" y="357" width="2.6" height="15.0" fill="rgb(220,121,49)" rx="2" ry="2" />
<text  x="1149.30" y="367.5" ></text>
</g>
<g >
<title>proc_tgid_stat (1 samples, 0.22%)</title><rect x="1146.3" y="325" width="2.6" height="15.0" fill="rgb(217,53,8)" rx="2" ry="2" />
<text  x="1149.30" y="335.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.22%)</title><rect x="1146.3" y="373" width="2.6" height="15.0" fill="rgb(252,82,15)" rx="2" ry="2" />
<text  x="1149.30" y="383.5" ></text>
</g>
<g >
<title>afterSleep (1 samples, 0.22%)</title><rect x="1148.9" y="469" width="2.5" height="15.0" fill="rgb(246,196,6)" rx="2" ry="2" />
<text  x="1151.87" y="479.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (317 samples, 69.06%)</title><rect x="323.6" y="405" width="815.0" height="15.0" fill="rgb(224,207,35)" rx="2" ry="2" />
<text  x="326.64" y="415.5" >__cmd_record.constprop.0</text>
</g>
<g >
<title>intel_pmu_enable_all (256 samples, 55.77%)</title><rect x="477.9" y="53" width="658.1" height="15.0" fill="rgb(213,23,28)" rx="2" ry="2" />
<text  x="480.89" y="63.5" >intel_pmu_enable_all</text>
</g>
</g>
</svg>
